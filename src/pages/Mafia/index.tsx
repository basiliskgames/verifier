import React, { useState } from 'react';
import { calculateResult } from 'math/mafia';
import { Input, Notice, Select } from 'components';
import { GameResult } from './components/GameResult';

interface Props {
  game: string;
}

const options = [
  { label: 'Normal', value: 'NORMAL' },
  { label: 'Extra', value: 'EXTRA' },
  { label: '7 Spins', value: 'FEATURE_7' },
  { label: '9 Spins', value: 'FEATURE_9' },
  { label: '11 Spins', value: 'FEATURE_11' },
  { label: 'Random Spins', value: 'FEATURE_RAND' },
];

export const Mafia = ({ game }: Props) => {
  const [clientSeed, setClientSeed] = useState<string>('');
  const [serverSeed, setServerSeed] = useState<string>('');
  const [nonce, setNonce] = useState<string>('');
  const [betMode, setBetMode] = useState(options[0]);
  const [result, setResult] = useState<any>(null);

  const onCalculate = () => {
    setResult(calculateResult(clientSeed, serverSeed, nonce, betMode.value));
  };

  const onModeChange = (option: any) => {
    setBetMode(option);
  };

  return (
    <div>
      <Notice />
      <div className="inputsRow">
        <Input
          title="Client Seed"
          subTitle="Client Seed comes from your browser and is never generated by the server."
          value={clientSeed}
          onChange={({ target }) => setClientSeed(target.value)}
        />
        <Input
          title="Server Seed"
          subTitle="Server Seed is generated by the server. It is only shared with you after you rotate the seed."
          value={serverSeed}
          onChange={({ target }) => setServerSeed(target.value)}
        />
        <Input
          title="Nonce"
          subTitle="Nonce starts from 1 and is a count for the games you play (associated to the particular server seed)."
          value={nonce}
          onChange={({ target }) => setNonce(target.value)}
        />
        <Select title="Bet mode" value={betMode} options={options} game={game} onChange={onModeChange} />
      </div>
      <button type="button" className="btn btn-info" onClick={onCalculate}>
        Calculate
      </button>
      {result && <GameResult game={game} steps={result} />}
    </div>
  );
};
